{"meta":{"title":"Tris","subtitle":null,"description":null,"author":"Shi ronghui","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"java class","slug":"java-class","date":"2019-05-08T03:48:05.000Z","updated":"2019-05-08T03:50:56.000Z","comments":true,"path":"2019/05/08/java-class/","link":"","permalink":"http://yoursite.com/2019/05/08/java-class/","excerpt":"","text":"简单的讲，JAVA中的面向对象主要应用于类（class）在java中，类主要包括以下若干概念：常量、变量、构造函数、普通方法、析构函数，先简单介绍下基础，然后看一段Demo代码，看看你对java中的 类 理解如何 java关键字final用在变量的前面表示变量的值不可以改变，称为常量； 静态变量在内存中是共享的，与实例变量不同； 静态代码块在类加载时运行； 任何 Java 类都可以覆盖Object类提供的 protected 类型的 finalize() 方法作为析构方法，析构方法与构造方法相反，当对象销毁时自动执行。 12345678910111213141516171819202122232425262728package com.company.ronghui.shi;public class Counter &#123; private static int number = 0; Counter() &#123; init(); number++; &#125; static &#123; number++; &#125; private void init() &#123; number++; &#125; public int getCount() &#123; return number; &#125; protected void finalize() &#123; number--; System.out.println(\"Final number: \" + number); &#125;&#125; 12345678910111213141516package com.company.ronghui.shi;import java.lang.String;public class Main&#123; public static void main(String args[]) &#123; run(); Runtime.getRuntime().gc(); &#125; private static void run() &#123; for (int i = 1; i &lt;= 3; i++) &#123; System.out.println((new Counter()).getCount()); &#125; &#125; 正确答案123456357Final number: 6Final number: 5Final number: 4","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-05-07T10:07:00.000Z","updated":"2019-05-07T10:07:00.000Z","comments":true,"path":"2019/05/07/hello-world/","link":"","permalink":"http://yoursite.com/2019/05/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}